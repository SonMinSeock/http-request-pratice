{"ast":null,"code":"var _jsxFileName = \"/Users/sonminseog/Desktop/Web/React/udemy/http-request-pratice/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport { child, get, onValue, ref } from \"firebase/database\";\nimport { db } from \"./config/db\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [addMovie, setAddMovie] = useState({});\n  const fetchMovieHandler = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      // const res = await fetch(\n      //   \"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\"\n      // );\n\n      // if (!res.ok) {\n      //   throw new Error(\"Something Worng!\");\n      // }\n\n      //const data = await res.json();\n\n      const loadedMovies = [];\n      const dbRef = ref(db);\n\n      //const snapshot = await get(child(dbRef, \"/movies\"));\n\n      const snapshot = onValue(get(child(dbRef, \"/movies\")));\n      const data = snapshot.val();\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          ...data[key]\n        });\n      }\n      setMovies(loadedMovies);\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  }, []);\n  const addMovieHandler = useCallback(async movie => {\n    try {\n      const res = await fetch(\"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\", {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      setAddMovie(movie);\n      console.log(`AddMovieHandler POST Response Data : ${data}`);\n    } catch (err) {\n      console.log(`Error : ${err}`);\n    }\n  }, []);\n  const readOne = async () => {\n    const dbRef = ref(db);\n    const snapshot = await get(child(dbRef, \"/movies\"));\n    if (snapshot.exists()) {\n      console.log(snapshot.val());\n    }\n  };\n  useEffect(() => {\n    fetchMovieHandler();\n    readOne();\n  }, [fetchMovieHandler, db]);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found No Movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loadding...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/IdY3X2frOy1PVwCdsKzBvwGKOY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","child","get","onValue","ref","db","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","addMovie","setAddMovie","fetchMovieHandler","loadedMovies","dbRef","snapshot","data","val","key","push","id","err","message","addMovieHandler","movie","res","fetch","method","body","JSON","stringify","headers","json","console","log","readOne","exists","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["/Users/sonminseog/Desktop/Web/React/udemy/http-request-pratice/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport { child, get, onValue, ref } from \"firebase/database\";\nimport { db } from \"./config/db\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [addMovie, setAddMovie] = useState({});\n\n  const fetchMovieHandler = useCallback(async () => {\n    try {\n      setIsLoading(true);\n\n      setError(null);\n\n      // const res = await fetch(\n      //   \"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\"\n      // );\n\n      // if (!res.ok) {\n      //   throw new Error(\"Something Worng!\");\n      // }\n\n      //const data = await res.json();\n\n      const loadedMovies = [];\n\n      const dbRef = ref(db);\n\n      //const snapshot = await get(child(dbRef, \"/movies\"));\n\n      const snapshot = onValue(get(child(dbRef, \"/movies\")));\n\n      const data = snapshot.val();\n\n      for (const key in data) {\n        loadedMovies.push({ id: key, ...data[key] });\n      }\n\n      setMovies(loadedMovies);\n\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const addMovieHandler = useCallback(async (movie) => {\n    try {\n      const res = await fetch(\n        \"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(movie),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const data = await res.json();\n      setAddMovie(movie);\n      console.log(`AddMovieHandler POST Response Data : ${data}`);\n    } catch (err) {\n      console.log(`Error : ${err}`);\n    }\n  }, []);\n\n  const readOne = async () => {\n    const dbRef = ref(db);\n\n    const snapshot = await get(child(dbRef, \"/movies\"));\n    if (snapshot.exists()) {\n      console.log(snapshot.val());\n    }\n  };\n\n  useEffect(() => {\n    fetchMovieHandler();\n    readOne();\n  }, [fetchMovieHandler, db]);\n\n  let content = <p>Found No Movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loadding...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {/* {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && <p>Found No Movies.</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loadding...</p>} */}\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}