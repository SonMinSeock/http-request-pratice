{"ast":null,"code":"var _jsxFileName = \"/Users/sonminseog/Desktop/Web/React/udemy/http-request-pratice/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport { child, get, ref } from \"firebase/database\";\nimport db from \"./config/db\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [addMovie, setAddMovie] = useState({});\n  const fetchMovieHandler = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const res = await fetch(\"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\");\n      if (!res.ok) {\n        throw new Error(\"Something Worng!\");\n      }\n      const data = await res.json();\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          ...data[key]\n        });\n      }\n      setMovies(loadedMovies);\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  }, []);\n  const addMovieHandler = useCallback(async movie => {\n    try {\n      const res = await fetch(\"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\", {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      setAddMovie(movie);\n      console.log(`AddMovieHandler POST Response Data : ${data}`);\n    } catch (err) {\n      console.log(`Error : ${err}`);\n    }\n  }, []);\n  const readOne = async () => {\n    const dbRef = ref(db);\n    await get(child(dbRef, \"/movies\"));\n  };\n  useEffect(() => {\n    fetchMovieHandler();\n  }, [fetchMovieHandler, addMovie]);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found No Movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loadding...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/IdY3X2frOy1PVwCdsKzBvwGKOY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","child","get","ref","db","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","addMovie","setAddMovie","fetchMovieHandler","res","fetch","ok","Error","data","json","loadedMovies","key","push","id","err","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","readOne","dbRef","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["/Users/sonminseog/Desktop/Web/React/udemy/http-request-pratice/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport { child, get, ref } from \"firebase/database\";\nimport db from \"./config/db\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [addMovie, setAddMovie] = useState({});\n\n  const fetchMovieHandler = useCallback(async () => {\n    try {\n      setIsLoading(true);\n\n      setError(null);\n\n      const res = await fetch(\n        \"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\"\n      );\n\n      if (!res.ok) {\n        throw new Error(\"Something Worng!\");\n      }\n\n      const data = await res.json();\n\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({ id: key, ...data[key] });\n      }\n\n      setMovies(loadedMovies);\n\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const addMovieHandler = useCallback(async (movie) => {\n    try {\n      const res = await fetch(\n        \"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(movie),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const data = await res.json();\n      setAddMovie(movie);\n      console.log(`AddMovieHandler POST Response Data : ${data}`);\n    } catch (err) {\n      console.log(`Error : ${err}`);\n    }\n  }, []);\n\n  const readOne = async () => {\n    const dbRef = ref(db);\n\n    await get(child(dbRef, \"/movies\"));\n  };\n\n  useEffect(() => {\n    fetchMovieHandler();\n  }, [fetchMovieHandler, addMovie]);\n\n  let content = <p>Found No Movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loadding...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {/* {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && <p>Found No Movies.</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loadding...</p>} */}\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}