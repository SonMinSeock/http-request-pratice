{"ast":null,"code":"var _jsxFileName = \"/Users/sonminseog/Desktop/Web/React/udemy/http-request-pratice/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMovieHandler = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const res = await fetch(\"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\");\n      if (!res.ok) {\n        throw new Error(\"Something Worng!\");\n      }\n      const data = await res.json();\n      for (const key in data) {\n        console.log(key);\n      }\n      const transformMovies = data.results.map(movie => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date\n        };\n      });\n      setMovies(transformMovies);\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMovieHandler();\n  }, [fetchMovieHandler]);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found No Movies.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 17\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loadding...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this);\n  }\n  async function addMovieHandler(movie) {\n    try {\n      const res = await fetch(\"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\", {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      console.log(`AddMovieHandler POST Response Data : ${data}`);\n    } catch (err) {\n      console.log(`Error : ${err}`);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"q47TvAvDtUCPG140X/S2DS6GxUM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","res","fetch","ok","Error","data","json","key","console","log","transformMovies","results","map","movie","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","err","message","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","addMovieHandler","method","body","JSON","stringify","headers","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["/Users/sonminseog/Desktop/Web/React/udemy/http-request-pratice/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMovieHandler = useCallback(async () => {\n    try {\n      setIsLoading(true);\n\n      setError(null);\n\n      const res = await fetch(\n        \"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\"\n      );\n\n      if (!res.ok) {\n        throw new Error(\"Something Worng!\");\n      }\n\n      const data = await res.json();\n\n      for (const key in data) {\n        console.log(key);\n      }\n\n      const transformMovies = data.results.map((movie) => {\n        return {\n          id: movie.episode_id,\n          title: movie.title,\n          openingText: movie.opening_crawl,\n          releaseDate: movie.release_date,\n        };\n      });\n\n      setMovies(transformMovies);\n\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMovieHandler();\n  }, [fetchMovieHandler]);\n\n  let content = <p>Found No Movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loadding...</p>;\n  }\n\n  async function addMovieHandler(movie) {\n    try {\n      const res = await fetch(\n        \"https://react-http-cd376-default-rtdb.firebaseio.com/movies.json\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(movie),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const data = await res.json();\n      console.log(`AddMovieHandler POST Response Data : ${data}`);\n    } catch (err) {\n      console.log(`Error : ${err}`);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {/* {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && <p>Found No Movies.</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loadding...</p>} */}\n        {content}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE/D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,iBAAiB,GAAGf,WAAW,CAAC,YAAY;IAChD,IAAI;MACFY,YAAY,CAAC,IAAI,CAAC;MAElBE,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAME,GAAG,GAAG,MAAMC,KAAK,CACrB,kEACF,CAAC;MAED,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;MACrC;MAEA,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAE7B,KAAK,MAAMC,GAAG,IAAIF,IAAI,EAAE;QACtBG,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;MAEA,MAAMG,eAAe,GAAGL,IAAI,CAACM,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAK;QAClD,OAAO;UACLC,EAAE,EAAED,KAAK,CAACE,UAAU;UACpBC,KAAK,EAAEH,KAAK,CAACG,KAAK;UAClBC,WAAW,EAAEJ,KAAK,CAACK,aAAa;UAChCC,WAAW,EAAEN,KAAK,CAACO;QACrB,CAAC;MACH,CAAC,CAAC;MAEFzB,SAAS,CAACe,eAAe,CAAC;MAE1Bb,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOwB,GAAG,EAAE;MACZtB,QAAQ,CAACsB,GAAG,CAACC,OAAO,CAAC;IACvB;IACAzB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACdc,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;EAEvB,IAAIuB,OAAO,gBAAGhC,OAAA;IAAAiC,QAAA,EAAG;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAErC,IAAIlC,MAAM,CAACmC,MAAM,GAAG,CAAC,EAAE;IACrBN,OAAO,gBAAGhC,OAAA,CAACH,UAAU;MAACM,MAAM,EAAEA;IAAO;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1C;EAEA,IAAI9B,KAAK,EAAE;IACTyB,OAAO,gBAAGhC,OAAA;MAAAiC,QAAA,EAAI1B;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC1B;EAEA,IAAIhC,SAAS,EAAE;IACb2B,OAAO,gBAAGhC,OAAA;MAAAiC,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC9B;EAEA,eAAeE,eAAeA,CAACjB,KAAK,EAAE;IACpC,IAAI;MACF,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CACrB,kEAAkE,EAClE;QACE6B,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACrB,KAAK,CAAC;QAC3BsB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,MAAM9B,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7BE,OAAO,CAACC,GAAG,CAAE,wCAAuCJ,IAAK,EAAC,CAAC;IAC7D,CAAC,CAAC,OAAOgB,GAAG,EAAE;MACZb,OAAO,CAACC,GAAG,CAAE,WAAUY,GAAI,EAAC,CAAC;IAC/B;EACF;EAEA,oBACE9B,OAAA,CAACP,KAAK,CAACoD,QAAQ;IAAAZ,QAAA,gBACbjC,OAAA;MAAAiC,QAAA,eACEjC,OAAA,CAACF,QAAQ;QAACgD,UAAU,EAAEP;MAAgB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACVrC,OAAA;MAAAiC,QAAA,eACEjC,OAAA;QAAQ+C,OAAO,EAAEtC,iBAAkB;QAAAwB,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACVrC,OAAA;MAAAiC,QAAA,EAKGD;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACnC,EAAA,CAlGQD,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AAoGZ,eAAeA,GAAG;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}